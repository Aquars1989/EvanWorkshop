{"version":3,"file":"static/js/539.b11899ea.chunk.js","mappings":"sRAwGO,SAAeA,EAA4BC,EAAAC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAkBjD,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAlBM,SAAAC,EAA4CC,EAAkBC,GAAgB,IAAAC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAE1DC,MACrBC,EAAAA,GAAmB,cAAgBT,EAAY,cAAgBC,EAC/D,CACES,OAAQ,QAEV,KAAD,EALa,OAARR,EAAQG,EAAAM,KAAAN,EAAAE,KAAA,EAOKL,EAASC,OAAO,KAAD,EAAxB,OAAJA,EAAIE,EAAAM,KAAAN,EAAAO,OAAA,SACHT,GAAI,eAAAE,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAO,OAAA,SAEJ,CACLE,KAAM,OACNC,QAASV,EAAAQ,GAAGE,QACZC,KAAO,KACR,yBAAAX,EAAAY,OAAA,GAAAlB,EAAA,oBAEJL,MAAA,KAAAC,UAAA,CAEM,SAAeuB,EAA+BC,EAAAC,GAAA,OAAAC,EAAA3B,MAAC,KAADC,UAAA,CAmBpD,SAAA0B,IAAA,OAAAA,GAAAzB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAnBM,SAAAwB,EAA+CC,EAAaC,GAAgB,IAAAtB,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAnB,KAAA,EAAAmB,EAAAlB,KAAA,EAGxDC,MACrBkB,EAAAA,GAA2B,SAAWH,EAAO,cAAgBC,EAC7D,CACEd,OAAQ,QAEV,KAAD,EALa,OAARR,EAAQuB,EAAAd,KAAAc,EAAAlB,KAAA,EAOKL,EAASC,OAAO,KAAD,EAAxB,OAAJA,EAAIsB,EAAAd,KAAAc,EAAAb,OAAA,SACHT,GAAI,eAAAsB,EAAAnB,KAAA,GAAAmB,EAAAZ,GAAAY,EAAA,SAAAA,EAAAb,OAAA,SAEJ,CACLE,KAAM,OACNC,QAASU,EAAAZ,GAAGE,QACZC,KAAO,KACR,yBAAAS,EAAAR,OAAA,GAAAK,EAAA,oBAEJ5B,MAAA,KAAAC,UAAA,CAEM,SAAegC,IAA4B,OAAAC,EAAAlC,MAAC,KAADC,UAAA,CAmBjD,SAAAiC,IAAA,OAAAA,GAAAhC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAnBM,SAAA+B,IAAA,IAAA3B,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAGoBC,MACrBuB,EAAAA,GACA,CACErB,OAAQ,QAEV,KAAD,EALa,OAARR,EAAQ4B,EAAAnB,KAAAmB,EAAAvB,KAAA,EAOKL,EAASC,OAAO,KAAD,EAAxB,OAAJA,EAAI2B,EAAAnB,KAAAmB,EAAAlB,OAAA,SACHT,GAAI,eAAA2B,EAAAxB,KAAA,GAAAwB,EAAAjB,GAAAiB,EAAA,SAAAA,EAAAlB,OAAA,SAEJ,CACLE,KAAM,OACNC,QAASe,EAAAjB,GAAGE,QACZC,KAAO,KACR,yBAAAc,EAAAb,OAAA,GAAAY,EAAA,oBAEJnC,MAAA,KAAAC,UAAA,CAEM,SAAeqC,EAAkCC,GAAA,OAAAC,EAAAxC,MAAC,KAADC,UAAA,CAmBvD,SAAAuC,IAAA,OAAAA,GAAAtC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAnBM,SAAAqC,EAAkDC,GAAa,IAAAlC,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAG3CC,MACrB8B,EAAAA,GAAyB,WAAaF,EACtC,CACE1B,OAAQ,QAEV,KAAD,EALa,OAARR,EAAQmC,EAAA1B,KAAA0B,EAAA9B,KAAA,EAOKL,EAASC,OAAO,KAAD,EAAxB,OAAJA,EAAIkC,EAAA1B,KAAA0B,EAAAzB,OAAA,SACHT,GAAI,eAAAkC,EAAA/B,KAAA,GAAA+B,EAAAxB,GAAAwB,EAAA,SAAAA,EAAAzB,OAAA,SAEJ,CACLE,KAAM,OACNC,QAASsB,EAAAxB,GAAGE,QACZC,KAAO,CAACuB,WAAW,CAACC,MAAM,IAAKC,UAAU,MAC1C,yBAAAJ,EAAApB,OAAA,GAAAkB,EAAA,oBAEJzC,MAAA,KAAAC,UAAA,CAEM,SAAe+C,EAAyBC,EAAAC,EAAAC,GAAA,OAAAC,EAAApD,MAAC,KAADC,UAAA,CAkB9C,SAAAmD,IAAA,OAAAA,GAAAlD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAlBM,SAAAiD,EAAyCxB,EAAayB,EAAaC,GAAW,IAAA/C,EAAAC,EAAA,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA5C,KAAA,EAAA4C,EAAA3C,KAAA,EAE1DC,MACrB2C,EAAAA,GAAgB,SAAW5B,EAAO,SAAWyB,EAAK,SAASC,EAC3D,CACEvC,OAAQ,QAEV,KAAD,EALa,OAARR,EAAQgD,EAAAvC,KAAAuC,EAAA3C,KAAA,EAOKL,EAASC,OAAO,KAAD,EAAxB,OAAJA,EAAI+C,EAAAvC,KAAAuC,EAAAtC,OAAA,SACHT,GAAI,eAAA+C,EAAA5C,KAAA,GAAA4C,EAAArC,GAAAqC,EAAA,SAAAA,EAAAtC,OAAA,SAEJ,CACLE,KAAM,OACNC,QAASmC,EAAArC,GAAGE,QACZC,KAAO,KACR,yBAAAkC,EAAAjC,OAAA,GAAA8B,EAAA,oBAEJrD,MAAA,KAAAC,UAAA,C,gHC5MD,GAAgB,KAAO,6BAA6B,KAAO,6BAA6B,WAAa,mCAAmC,eAAiB,uCAAuC,aAAe,sC,uCCQhM,SAASyD,EAAYC,GAAoC,IAAjC9B,EAAI8B,EAAJ9B,KAAM+B,EAAUD,EAAVC,WAAYC,EAAIF,EAAJE,KACnDC,GAAUC,EAAAA,EAAAA,KAAA,QAAAC,SAAM,0BACR,MAARH,IACFC,GACEG,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CACGH,EAAKK,KAAI,SAACC,GACT,OAAOJ,EAAAA,EAAAA,KAAA,OAAAC,SAAiBG,IAAPC,EAAAA,EAAAA,KACnB,IAAG,SAMT,IAAIC,GAAiBN,EAAAA,EAAAA,KAAAO,EAAAA,SAAA,IACH,MAAdV,IACFS,GAAiBJ,EAAAA,EAAAA,MAAA,QAAMM,UAAU,OAAMP,SAAA,CAAC,KAAGJ,MAG7C,IAAMY,EAAU,WAAa3C,EACvB4C,EAAW,YAAc5C,EAC/B,OACEoC,EAAAA,EAAAA,MAAA,OAAKM,UAAU,iBAAgBP,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,mBAAmBG,GAAIF,EAAQR,UAC5CC,EAAAA,EAAAA,MAAA,UACEM,UAAU,qCACVI,KAAK,SACL,iBAAe,WACf,iBAAgB,IAAMF,EACtB,gBAAc,OACd,gBAAeA,EAAST,SAAA,EAExBD,EAAAA,EAAAA,KAAA,QAAAC,SAAOnC,IACNwC,QAGLN,EAAAA,EAAAA,KAAA,OACEW,GAAID,EACJF,UAAU,8BACV,kBAAiBC,EACjB,iBAAe,kBAAiBR,UAEhCD,EAAAA,EAAAA,KAAA,OAAKQ,UAAW,kBAAoBK,EAAAA,aAAmBZ,UACrDD,EAAAA,EAAAA,KAAA,SAAAC,SAAQF,UAKlB,CChDe,SAASe,EAAYlB,GAAoB,IAAlBmB,EAAQnB,EAARmB,SACpC,OACEf,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,4BAA4BG,GAAG,iBAAgBV,SAC3Dc,EAASZ,KAAI,SAACa,GAEb,IAAQlD,EAA2BkD,EAA3BlD,KAAM+B,EAAqBmB,EAArBnB,WAAYC,EAASkB,EAATlB,KAC1B,OACIE,EAAAA,EAAAA,KAACL,EAAY,CAEX7B,KAAMA,EACN+B,WAAYA,EACZC,KAAMA,IAHDO,EAAAA,EAAAA,KAMb,KAGN,C,wBCfe,SAASY,IACtB,IAAMC,GAAgBC,EAAAA,EAAAA,QAAO,MAC7BC,GAAwBC,EAAAA,EAAAA,UAAS,IAAiCC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3D7D,EAAI+D,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAAyBJ,EAAAA,EAAAA,UAAS,QAAOK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAlC3D,EAAI4D,EAAA,GAAEC,EAAQD,EAAA,GACrBE,GAAkCP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA8BX,EAAAA,EAAAA,WAAS,GAAMY,GAAAV,EAAAA,EAAAA,GAAAS,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,GAAOC,EAAAA,EAAAA,KAEPC,GAAeC,EAAAA,EAAAA,UAAQ,WAC3B,OAAOvC,EAAAA,EAAAA,KAACc,EAAY,CAACC,SAAUxD,GACjC,GAAG,CAACA,KAEJiF,EAAAA,EAAAA,YAAU,WAERT,GAAcjE,EAAK2E,MADL,QACqB,IAAIC,OAAS,EAClD,GAAG,CAAC5E,IAEJ,IAyBI6E,EAtBF,SAEaC,EAASC,EAAAC,GAAA,OAAAC,EAAA9G,MAAC,KAADC,UAAA,UAAA6G,IAUvB,OAVuBA,GAAA5G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAxB,SAAA2G,EAAyBlF,EAAc0D,GAAY,IAAAyB,EAAA,OAAA7G,EAAAA,EAAAA,KAAAO,MAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,cAAAoG,EAAApG,KAAA,GAE3BW,EAAAA,EAAAA,IACpBK,EACAsE,EAAKe,OAAOC,SAAS,MAAQ,IAAM,KACnC,KAAD,EACoB,UAJfH,EAAOC,EAAAhG,MAIDG,MAEVmE,EAAQyB,EAAQ1F,MACjB,wBAAA2F,EAAA1F,OAAA,GAAAwF,EAAA,KACFD,EAAA9G,MAAA,KAAAC,UAAA,CAEsB,SAAAmH,IAMtB,OANsBA,GAAAlH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAvB,SAAAC,EAAwBgH,GAAU,OAAAlH,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGf,OAFjBwG,EAAMC,iBAENpB,GAAW,GAAMvF,EAAAE,KAAA,EACX8F,EAAU9E,EAAM0D,GAAS,KAAD,EAC9BW,GAAW,GAAO,wBAAAvF,EAAAY,OAAA,GAAAlB,EAAA,MACnBL,MAAA,KAAAC,UAAA,CA0BD,OAtBEyG,EADET,GAEAlC,EAAAA,EAAAA,KAAA,UAAQY,KAAK,SAASJ,UAAU,uCAAsCP,UACpED,EAAAA,EAAAA,KAAA,QACEQ,UAAU,mCACVgD,KAAK,SACL,cAAY,YAMhBxD,EAAAA,EAAAA,KAAA,UACEY,KAAK,SACLJ,UACE,+BAAiCsB,EAAY,aAAe,IAC7D7B,UAEDD,EAAAA,EAAAA,KAACyD,EAAAA,EAAgB,CAAC9C,GAAG,6BAMzBX,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,QAAMM,UAAWK,EAAAA,KAAWZ,SAAA,EAC1BD,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACyD,EAAAA,EAAgB,CAAC9C,GAAG,4BAEvBT,EAAAA,EAAAA,MAAA,OAAKM,UAAWK,EAAAA,KAAWZ,SAAA,EACzBD,EAAAA,EAAAA,KAAA,OAAKQ,UAAWK,EAAAA,cAChBX,EAAAA,EAAAA,MAACwD,EAAAA,EAAAA,IAAU,CACTC,QAAQ,YACRC,YAAY,WACZC,WAAY,CAAEC,MAAO,GAAKC,SAAU,IACpCC,SA7DO,CACfC,UAAW,CAAEC,QAAS,GACtBC,SAAU,CAAED,QAAS,IA2DMjE,SAAA,EAEnBC,EAAAA,EAAAA,MAAA,QAAMkE,SAhDf,SAEsBtI,GAAA,OAAAuH,EAAApH,MAAC,KAADC,UAAA,EA8CasE,UAAU,6BAA4BP,SAAA,EAC9DD,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,yBAAwBP,UACrCC,EAAAA,EAAAA,MAAA,OAAKM,UAAU,mCAAkCP,SAAA,EAC/CD,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,mBAAmBG,GAAG,uBAAsBV,UAC1DD,EAAAA,EAAAA,KAACyD,EAAAA,EAAgB,CAAC9C,GAAG,2BAEvBX,EAAAA,EAAAA,KAAA,SACEY,KAAK,OACLJ,UAAU,eACV,aAAW,uBACX,mBAAiB,uBACjB6D,MAAOvG,EACPwG,SAAU,SAACC,GAAC,OAAK5C,EAAS4C,EAAEC,OAAOH,MAAM,UAI/CrE,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,yBAAwBP,SAAE0C,QAE3CzC,EAAAA,EAAAA,MAAA,MAAIM,UAAU,gBAAeP,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACyD,EAAAA,EAAgB,CAAC9C,GAAG,mCAEvBX,EAAAA,EAAAA,KAAA,MAAIQ,UAAWsB,EAAY,WAAa,GAAG7B,UACzCD,EAAAA,EAAAA,KAACyD,EAAAA,EAAgB,CAAC9C,GAAG,sCAGzBX,EAAAA,EAAAA,KAAA,OACEQ,UAAWK,EAAAA,eAAuB,sBAClC4D,IAAKvD,EAAcjB,SAElBqC,cAOf,C","sources":["fetch/fetch-evan-flask-api.tsx","webpack://evan-workshop/./src/pages/Programs/pages/ScrabbleHelper/index.module.css?1b06","pages/Programs/pages/ScrabbleHelper/components/scrabble-item.tsx","pages/Programs/pages/ScrabbleHelper/components/scrabble-list.tsx","pages/Programs/pages/ScrabbleHelper/index.tsx"],"sourcesContent":["import {\n  Api_Flask_Leetcode,\n  Api_Flask_Reddit,\n  Api_Flask_ScrabbleHelper,\n  Api_Flask_Crypto,\n  Api_Flask_CryptoDetail,\n  Api_Flask_CNN,\n  Api_Flask_OpenArt\n} from \"golbal/constants\";\n\ninterface IEvanAPIReceive<T>\n{\n  code: string; \n  message: string;\n  data: T;\n}\n\nexport interface ICrawlLeetcodeData\n{\n  record:\n  {\n    acRate:number;\n    difficulty: string;\n    frontendQuestionId: string;\n    tags:Array<string>;\n    title: string;\n}[],\n  tag: {\n    acceptance: number;\n    count: number;\n    difficulty: string;\n    tag: string;\n  }[]\n}\n\nexport interface ICrawlRedditData\n{\n  author:string;\n  thing: string;\n  time:string;\n  title: string;\n  url:string;\n}\n\nexport interface IScrabbleHelperData\n{\n  mean:Array<string>;\n  word: string;\n  translated:string;\n}\n\nexport interface ICrawlCryptoData\n{\n  name: string;\n  price: string;\n  change: string;\n  changeRate: string;\n}\n\nexport interface ICrawlCryptoDetailData\n{\n  indicators:\n  {\n    quote:\n    {\n      close: Array<number>;\n      high: Array<number>;\n      low: Array<number>;\n      open: Array<number>;\n      volume: Array<number>;\n    }[]\n  },\n  timestamp: Array<number>;\n}\n\nexport interface ICrawlCNNData\n{\n  category: string;\n  firstPublish: string;\n  lastPublish: string;\n  headline: string;\n  url: string;\n}\n\nexport async function FetchEvanAPI_CrawlLeetcode_Get (limit:number, skip:number) :Promise<IEvanAPIReceive<ICrawlLeetcodeData>>{\n  try {\n    //console.log(Api_Flask_Leetcode + \"?skip=\" + skip + \"&limit=\" + limit);\n    const response = await fetch(\n      Api_Flask_Leetcode + \"?skip=\" + skip + \"&limit=\" + limit,\n      {\n        method: \"GET\",\n      }\n    );\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : {record:[] ,tag:[]}\n    };\n  }\n}\n\nexport async function FetchEvanAPI_CrawlReddit_Get(subreddit:string, lastThing:string) :Promise<IEvanAPIReceive<Array<ICrawlRedditData>>> {\n  try {\n    const response = await fetch(\n      Api_Flask_Reddit + \"?subreddit=\" + subreddit + \"&lastThing=\" + lastThing,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : []\n    };\n  }\n}\n\nexport async function FetchEvanAPI_ScrabbleHelper_Get(word:string, translate:string) :Promise<IEvanAPIReceive<Array<IScrabbleHelperData>>> {\n  try {\n   \n    const response = await fetch(\n      Api_Flask_ScrabbleHelper + \"?word=\" + word + \"&translate=\" + translate,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : []\n    };\n  }\n}\n\nexport async function FetchEvanAPI_CrawlCrypto_Get() :Promise<IEvanAPIReceive<Array<ICrawlCryptoData>>> {\n  try {\n   \n    const response = await fetch(\n      Api_Flask_Crypto ,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : []\n    };\n  }\n}\n\nexport async function FetchEvanAPI_CrawlCryptoDetail_Get(crypto:string) :Promise<IEvanAPIReceive<ICrawlCryptoDetailData>> {\n  try {\n   \n    const response = await fetch(\n      Api_Flask_CryptoDetail + \"?crypto=\" + crypto ,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : {indicators:{quote:[]} ,timestamp:[]}\n    };\n  }\n}\n\nexport async function FetchEvanAPI_CrawlCNN_Get(word:string, size:number, skip:number) :Promise<IEvanAPIReceive<Array<ICrawlCNNData>>> {\n  try {\n    const response = await fetch(\n      Api_Flask_CNN + \"?word=\" + word + \"&size=\" + size+\"&skip=\"+skip,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : []\n    };\n  }\n}\n\nexport async function FetchEvanAPI_OpenArt_Get(word:string) :Promise<IEvanAPIReceive<string>> {\n  try {\n   \n    const text = word || \"\";\n    if (text.trim().length === 0) {\n      return { code: \"O002\", message: \"Please enter the word\", data:\"\" };\n    }\n\n    const response = await fetch(\n      Api_Flask_OpenArt + \"?word=\" + word,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : \"\"\n    };\n  }\n}","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"ScrabbleHelper_main__OU9Uu\",\"body\":\"ScrabbleHelper_body__oJFbL\",\"background\":\"ScrabbleHelper_background__WDDa-\",\"list_container\":\"ScrabbleHelper_list_container__0qnAH\",\"word_content\":\"ScrabbleHelper_word_content__bQHUh\"};","import style from \"../index.module.css\";\nimport { v4 } from \"uuid\";\n\ninterface Props {\n  word: string;\n  translated: string;\n  mean: Array<string>;\n}\n\nexport default function ScrabbleItem({ word, translated, mean }:Props) {\n  let tooltip = <span>Can't find definition</span>;\n  if (mean != null) {\n    tooltip = (\n      <div>\n        {mean.map((m) => {\n          return <div key={v4()}>{m}</div>;\n        })}\n        );\n      </div>\n    );\n  }\n\n  let translatedSpan = <></>;\n  if (translated != null) {\n    translatedSpan = <span className=\"mx-1\">- {translated}</span>;\n  }\n\n  const heading = \"heading_\" + word;\n  const collapse = \"collapse_\" + word;\n  return (\n    <div className=\"accordion-item\">\n      <div className=\"accordion-header\" id={heading}>\n        <button\n          className=\"accordion-button collapsed p-1 m-0\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target={\"#\" + collapse}\n          aria-expanded=\"true\"\n          aria-controls={collapse}\n        >\n          <span>{word}</span>\n          {translatedSpan}\n        </button>\n      </div>\n      <div\n        id={collapse}\n        className=\"accordion-collapse collapse\"\n        aria-labelledby={heading}\n        data-bs-parent=\"#accordionWords\"\n      >\n        <div className={\"accordion-body \" + style.word_content}>\n          <small>{tooltip}</small>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import ScrabbleItem from \"./scrabble-item\";\nimport { v4 } from \"uuid\";\nimport { IScrabbleHelperData } from \"fetch/fetch-evan-flask-api\";\n\ninterface Props{\n  listData : Array<IScrabbleHelperData>\n}\n\nexport default function ScrabbleList({listData}:Props) {\n  return (\n    <div className=\"accordion accordion-flush\" id=\"accordionWords\">\n      {listData.map((item) => {\n        //console.log(item);\n        const { word, translated, mean } = item;\n        return (\n            <ScrabbleItem\n              key={v4()}\n              word={word}\n              translated={translated}\n              mean={mean}\n            />\n        );\n      })}\n    </div>\n  );\n}\n","import { useState, useEffect, useRef, useMemo } from \"react\";\nimport style from \"./index.module.css\";\nimport { useIntl, FormattedMessage } from \"react-intl\";\nimport ScrabbleList from \"./components/scrabble-list\";\nimport {\n  FetchEvanAPI_ScrabbleHelper_Get,\n  IScrabbleHelperData,\n} from \"fetch/fetch-evan-flask-api\";\nimport { motion } from \"framer-motion\";\n\nexport default function ScrabbleHelper() {\n  const listContainer = useRef(null);\n  const [data, setData] = useState([] as Array<IScrabbleHelperData>);\n  const [word, setWords] = useState(\"lo?e\");\n  const [overLimit, setOverLimit] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const intl = useIntl();\n\n  const scrabbleList = useMemo(() => {\n    return <ScrabbleList listData={data} />;\n  }, [data]);\n\n  useEffect(() => {\n    const regex = /\\?/g;\n    setOverLimit((word.match(regex) || \"\").length > 4);\n  }, [word]);\n\n  const variants = {\n    offscreen: { opacity: 0 },\n    onscreen: { opacity: 1 },\n  };\n\n  async function fetchData(word: string, setData: any) {\n    //console.log(intl.locale);\n    const evanRes = await FetchEvanAPI_ScrabbleHelper_Get(\n      word,\n      intl.locale.includes(\"zh\") ? \"Y\" : \"N\"\n    );\n    if (evanRes.code === \"0000\") {\n      //console.log(evanRes);\n      setData(evanRes.data);\n    }\n  }\n\n  async function onSubmit(event: any) {\n    event.preventDefault();\n\n    setLoading(true);\n    await fetchData(word, setData);\n    setLoading(false);\n  }\n\n  var summitButton;\n  if (loading) {\n    summitButton = (\n      <button type=\"submit\" className=\"btn btn-primary w-100 h-100 disabled\">\n        <span\n          className=\"spinner-border spinner-border-sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        ></span>\n      </button>\n    );\n  } else {\n    summitButton = (\n      <button\n        type=\"submit\"\n        className={\n          \"btn btn-primary w-100 h-100\" + (overLimit ? \" disabled \" : \"\")\n        }\n      >\n        <FormattedMessage id=\"scrabbleHelper.summit\" />\n      </button>\n    );\n  }\n\n  return (\n    <div>\n      <main className={style.main}>\n        <h3>\n          <FormattedMessage id=\"scrabbleHelper.title\" />\n        </h3>\n        <div className={style.body}>\n          <div className={style.background}></div>\n          <motion.div\n            initial=\"offscreen\"\n            whileInView=\"onscreen\"\n            transition={{ delay: 0.5, duration: 0.5 }}\n            variants={variants}\n          >\n            <form onSubmit={onSubmit} className=\"row align-items-sm-stretch\">\n              <div className=\"col-sm-12 col-md-9 p-2\">\n                <div className=\"input-group input-group-sm h-100\">\n                  <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">\n                    <FormattedMessage id=\"scrabbleHelper.word\" />\n                  </span>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    aria-label=\"Sizing example input\"\n                    aria-describedby=\"inputGroup-sizing-sm\"\n                    value={word}\n                    onChange={(e) => setWords(e.target.value)}\n                  />\n                </div>\n              </div>\n              <div className=\"col-sm-12 col-md-3 p-2\">{summitButton}</div>\n            </form>\n            <ul className=\"txt-tip1 mb-3\">\n              <li>\n                <FormattedMessage id=\"scrabbleHelper.description1\" />\n              </li>\n              <li className={overLimit ? \"txt-err1\" : \"\"}>\n                <FormattedMessage id=\"scrabbleHelper.description2\" />\n              </li>\n            </ul>\n            <div\n              className={style.list_container + \" bg-secondary w-100\"}\n              ref={listContainer}\n            >\n              {scrabbleList}\n            </div>\n          </motion.div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":["FetchEvanAPI_CrawlReddit_Get","_x3","_x4","_FetchEvanAPI_CrawlReddit_Get","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","subreddit","lastThing","response","json","wrap","_context2","prev","next","fetch","Api_Flask_Reddit","method","sent","abrupt","t0","code","message","data","stop","FetchEvanAPI_ScrabbleHelper_Get","_x5","_x6","_FetchEvanAPI_ScrabbleHelper_Get","_callee3","word","translate","_context3","Api_Flask_ScrabbleHelper","FetchEvanAPI_CrawlCrypto_Get","_FetchEvanAPI_CrawlCrypto_Get","_callee4","_context4","Api_Flask_Crypto","FetchEvanAPI_CrawlCryptoDetail_Get","_x7","_FetchEvanAPI_CrawlCryptoDetail_Get","_callee5","crypto","_context5","Api_Flask_CryptoDetail","indicators","quote","timestamp","FetchEvanAPI_CrawlCNN_Get","_x8","_x9","_x10","_FetchEvanAPI_CrawlCNN_Get","_callee6","size","skip","_context6","Api_Flask_CNN","ScrabbleItem","_ref","translated","mean","tooltip","_jsx","children","_jsxs","map","m","v4","translatedSpan","_Fragment","className","heading","collapse","id","type","style","ScrabbleList","listData","item","ScrabbleHelper","listContainer","useRef","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","setWords","_useState5","_useState6","overLimit","setOverLimit","_useState7","_useState8","loading","setLoading","intl","useIntl","scrabbleList","useMemo","useEffect","match","length","summitButton","fetchData","_x","_x2","_fetchData","_callee","evanRes","_context","locale","includes","_onSubmit","event","preventDefault","role","FormattedMessage","motion","initial","whileInView","transition","delay","duration","variants","offscreen","opacity","onscreen","onSubmit","value","onChange","e","target","ref"],"sourceRoot":""}