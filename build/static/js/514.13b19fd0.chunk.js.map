{"version":3,"file":"static/js/514.13b19fd0.chunk.js","mappings":"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","sources":["fetch/fetch-evan-flask-api.tsx","webpack://evan-workshop/./src/pages/Programs/pages/CrawlYahooCrypto/index.module.css?a7f3","pages/Programs/pages/CrawlYahooCrypto/components/crypto-item.tsx","pages/Programs/pages/CrawlYahooCrypto/components/crypto-list.tsx","pages/Programs/pages/CrawlYahooCrypto/index.tsx"],"sourcesContent":["import {\n  Api_Flask_Leetcode,\n  Api_Flask_Reddit,\n  Api_Flask_ScrabbleHelper,\n  Api_Flask_Crypto,\n  Api_Flask_CryptoDetail,\n  Api_Flask_CNN,\n  Api_Flask_OpenArt\n} from \"golbal/constants\";\n\ninterface IEvanAPIReceive<T>\n{\n  code: string; \n  message: string;\n  data: T;\n}\n\nexport interface ICrawlLeetcodeData\n{\n  record:\n  {\n    acRate:number;\n    difficulty: string;\n    frontendQuestionId: string;\n    tags:Array<string>;\n    title: string;\n}[],\n  tag: {\n    acceptance: number;\n    count: number;\n    difficulty: string;\n    tag: string;\n  }[]\n}\n\nexport interface ICrawlRedditData\n{\n  author:string;\n  thing: string;\n  time:string;\n  title: string;\n  url:string;\n}\n\nexport interface IScrabbleHelperData\n{\n  mean:Array<string>;\n  word: string;\n  translated:string;\n}\n\nexport interface ICrawlCryptoData\n{\n  name: string;\n  price: string;\n  change: string;\n  changeRate: string;\n}\n\nexport interface ICrawlCryptoDetailData\n{\n  indicators:\n  {\n    quote:\n    {\n      close: Array<number>;\n      high: Array<number>;\n      low: Array<number>;\n      open: Array<number>;\n      volume: Array<number>;\n    }[]\n  },\n  timestamp: Array<number>;\n}\n\nexport interface ICrawlCNNData\n{\n  category: string;\n  firstPublish: string;\n  lastPublish: string;\n  headline: string;\n  url: string;\n}\n\nexport async function FetchEvanAPI_CrawlLeetcode_Get (limit:number, skip:number) :Promise<IEvanAPIReceive<ICrawlLeetcodeData>>{\n  try {\n    //console.log(Api_Flask_Leetcode + \"?skip=\" + skip + \"&limit=\" + limit);\n    const response = await fetch(\n      Api_Flask_Leetcode + \"?skip=\" + skip + \"&limit=\" + limit,\n      {\n        method: \"GET\",\n      }\n    );\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : {record:[] ,tag:[]}\n    };\n  }\n}\n\nexport async function FetchEvanAPI_CrawlReddit_Get(subreddit:string, lastThing:string) :Promise<IEvanAPIReceive<Array<ICrawlRedditData>>> {\n  try {\n    const response = await fetch(\n      Api_Flask_Reddit + \"?subreddit=\" + subreddit + \"&lastThing=\" + lastThing,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : []\n    };\n  }\n}\n\nexport async function FetchEvanAPI_ScrabbleHelper_Get(word:string, translate:string) :Promise<IEvanAPIReceive<Array<IScrabbleHelperData>>> {\n  try {\n   \n    const response = await fetch(\n      Api_Flask_ScrabbleHelper + \"?word=\" + word + \"&translate=\" + translate,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : []\n    };\n  }\n}\n\nexport async function FetchEvanAPI_CrawlCrypto_Get() :Promise<IEvanAPIReceive<Array<ICrawlCryptoData>>> {\n  try {\n   \n    const response = await fetch(\n      Api_Flask_Crypto ,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : []\n    };\n  }\n}\n\nexport async function FetchEvanAPI_CrawlCryptoDetail_Get(crypto:string) :Promise<IEvanAPIReceive<ICrawlCryptoDetailData>> {\n  try {\n   \n    const response = await fetch(\n      Api_Flask_CryptoDetail + \"?crypto=\" + crypto ,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : {indicators:{quote:[]} ,timestamp:[]}\n    };\n  }\n}\n\nexport async function FetchEvanAPI_CrawlCNN_Get(word:string, size:number, skip:number) :Promise<IEvanAPIReceive<Array<ICrawlCNNData>>> {\n  try {\n    const response = await fetch(\n      Api_Flask_CNN + \"?word=\" + word + \"&size=\" + size+\"&skip=\"+skip,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : []\n    };\n  }\n}\n\nexport async function FetchEvanAPI_OpenArt_Get(word:string) :Promise<IEvanAPIReceive<string>> {\n  try {\n   \n    const text = word || \"\";\n    if (text.trim().length === 0) {\n      return { code: \"O002\", message: \"Please enter the word\", data:\"\" };\n    }\n\n    const response = await fetch(\n      Api_Flask_OpenArt + \"?word=\" + word,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : \"\"\n    };\n  }\n}","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"CrawlYahooCrypto_main__1sV-p\",\"body\":\"CrawlYahooCrypto_body__Q2dQp\",\"background\":\"CrawlYahooCrypto_background__Zsnxp\",\"list\":\"CrawlYahooCrypto_list__6tU4Q\",\"list_container\":\"CrawlYahooCrypto_list_container__jVuFO\",\"rise\":\"CrawlYahooCrypto_rise__zHX4q\",\"fall\":\"CrawlYahooCrypto_fall__LUH60\",\"chart_container\":\"CrawlYahooCrypto_chart_container__svsmz\"};","import style from \"../index.module.css\";\n\ninterface Props {\n  name: string;\n  price: string;\n  change: string;\n  changeRate: string;\n}\n\nexport default function CryptoItem({ name, price, change, changeRate }: Props) {\n  let changeCss = \"\";\n  if (change.startsWith(\"-\")) {\n    changeCss = style.fall;\n  } else if (change.startsWith(\"+\")) {\n    changeCss = style.rise;\n  }\n\n  let changeRateCss = \"\";\n  if (changeRate.startsWith(\"-\")) {\n    changeRateCss = style.fall;\n  } else if (changeRate.startsWith(\"+\")) {\n    changeRateCss = style.rise;\n  }\n\n  return (\n    <tr>\n      <td>{name}</td>\n      <td className=\"text-end\">{price}</td>\n      <td className={\"text-end \"+changeCss}>{change}</td>\n      <td className={\"text-end \"+changeRateCss}>{changeRate}</td>\n    </tr>\n  );\n}\n","import CryptoItem from \"./crypto-item\";\nimport style from \"../index.module.css\";\nimport {ICrawlCryptoData} from \"fetch/fetch-evan-flask-api\"\nimport { v4 } from \"uuid\";\n\ninterface Props {\n  listData:Array<ICrawlCryptoData>\n}\n\nexport default function CryptoList({ listData }:Props) {\n  return (\n    <div>\n      <table cellPadding=\"2\" border={1} className={style.list}>\n      <thead>\n          <tr>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Change</th>\n            <th>Rate(%)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {listData.map((item) => {\n            const { name, price,change, changeRate } = item;\n            return (\n              <CryptoItem\n                key={v4()}\n                name={name}\n                price={price}\n                change={change}\n                changeRate={changeRate}\n              />\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useState, useEffect, useRef } from \"react\";\nimport style from \"./index.module.css\";\nimport CryptoList from \"./components/crypto-list\";\nimport { useIntl, FormattedMessage } from \"react-intl\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  FetchEvanAPI_CrawlCrypto_Get,\n  FetchEvanAPI_CrawlCryptoDetail_Get,\n  ICrawlCryptoData,\n} from \"fetch/fetch-evan-flask-api\";\nimport {\n  Chart as ChartJS,\n  BarController,\n  BarElement,\n  LineController,\n  LineElement,\n  PointElement,\n  LinearScale,\n  Title,\n  CategoryScale,\n  ChartData,\n  Legend,\n} from \"chart.js\";\nimport { motion } from \"framer-motion\";\n\nChartJS.register(\n  BarController,\n  BarElement,\n  LineController,\n  LineElement,\n  PointElement,\n  LinearScale,\n  Title,\n  CategoryScale,\n  Legend\n);\n\ninterface IChartCount {\n  name: string;\n  values: Array<number>;\n}\n\nexport default function CrawlYahooCrypto() {\n  const chartRef = useRef(null);\n  const listContainer = useRef<HTMLDivElement>(null);\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([] as Array<ICrawlCryptoData>);\n  const [countLabel, setCountLabel] = useState([] as Array<string>);\n  const [countData, setCountData] = useState([] as Array<IChartCount>);\n  const [chartData, setChartData] = useState({\n    datasets: [],\n  } as ChartData<\"line\", any>);\n  const intl = useIntl();\n\n  useEffect(() => {\n    if (listContainer.current) {\n      listContainer.current.scrollTop = listContainer.current.scrollHeight;\n    }\n  }, [data]);\n\n  useEffect(() => {\n    const chart = chartRef.current;\n    if (chart) {\n      const datasets = new Array<any>();\n      if (countData.length >= 1) {\n        datasets.push({\n          label: countData[0].name,\n          data: countData[0].values,\n          backgroundColor: \"rgba(255, 0, 0)\",\n          borderColor: \"rgba(255, 0, 0)\",\n          borderWidth: 1.5,\n          pointBorderWidth: 0,\n          pointRadius: 0,\n          fill: false,\n        });\n      }\n\n      if (countData.length >= 2) {\n        datasets.push({\n          label: countData[1].name,\n          data: countData[1].values,\n          backgroundColor: \"rgba(0, 0, 255)\",\n          borderColor: \"rgba(0, 0, 255)\",\n          borderWidth: 1.5,\n          pointBorderWidth: 0,\n          pointRadius: 0,\n          fill: false,\n        });\n      }\n\n      if (countData.length >= 3) {\n        datasets.push({\n          label: countData[2].name,\n          data: countData[2].values,\n          backgroundColor: \"rgba(0, 255,0 )\",\n          borderColor: \"rgba(0, 255, 0)\",\n          borderWidth: 1.5,\n          pointBorderWidth: 0,\n          pointRadius: 0,\n          fill: false,\n        });\n      }\n\n      if (countData.length >= 4) {\n        datasets.push({\n          label: countData[3].name,\n          data: countData[3].values,\n          backgroundColor: \"rgba(255, 0, 255)\",\n          borderColor: \"rgba(255, 0, 255)\",\n          borderWidth: 1.5,\n          pointBorderWidth: 0,\n          pointRadius: 0,\n          fill: false,\n        });\n      }\n\n      if (countData.length >= 5) {\n        datasets.push({\n          label: countData[4].name,\n          data: countData[4].values,\n          backgroundColor: \"rgba(0, 255, 255)\",\n          borderColor: \"rgba(0, 255, 255)\",\n          borderWidth: 1.5,\n          pointBorderWidth: 0,\n          pointRadius: 0,\n          fill: false,\n        });\n      }\n\n      //console.log(datasets);\n\n      setChartData({\n        labels: countLabel,\n        datasets: datasets,\n      });\n    }\n  }, [countLabel, countData]);\n\n  const variants = {\n    offscreen: { opacity: 0 },\n    onscreen: { opacity: 1 },\n  };\n\n  const options: any = {\n    layout: {\n      padding: 20,\n    },\n    plugins: {\n      legend: {\n        position: \"top\",\n        display: true,\n        align: \"start\",\n        labels: {\n          color: \"#FFFFFF80\",\n          usePointStyle: true,\n        },\n      },\n      title: {\n        color: \"#FFFFFFBB\",\n        display: true,\n        text: intl.formatMessage({ id: \"crawlCrypto.chartTitle\" }),\n      },\n    },\n    responsive: true,\n    maintainAspectRatio: true,\n    aspectRatio: 1.5,\n    scales: {\n      x: {\n        beginAtZero: true,\n        grid: {\n          drawBorder: true,\n          color: \"#FFFFFF20\",\n        },\n        ticks: {\n          precision: 0,\n          color: \"#FFFFFF80\",\n        },\n        border: {\n          color: \"#FFFFFF80\",\n        },\n      },\n      y: {\n        grid: {\n          drawBorder: true,\n          color: \"#FFFFFF20\",\n        },\n        ticks: {\n          color: \"#FFFFFF80\",\n        },\n        border: {\n          color: \"#FFFFFF80\",\n        },\n      },\n    },\n  };\n\n  async function fetchData() {\n    setCountData([]);\n    const evanRes = await FetchEvanAPI_CrawlCrypto_Get();\n    if (evanRes.code !== \"0000\") return;\n    if (evanRes.data.length === 0) return;\n    setData(evanRes.data);\n\n    const chartSkip = [\"USDT-USD\", \"USDC-USD\"];\n    const label = [];\n    let count = 0;\n    for (let i = 0; i < evanRes.data.length && count < 5; i++) {\n      const name = evanRes.data[i].name;\n\n      if (chartSkip.indexOf(name) >= 0) continue;\n      count += 1;\n\n      const evanResDetail = await FetchEvanAPI_CrawlCryptoDetail_Get(name);\n      if (evanResDetail.code !== \"0000\") continue;\n\n      const detailData = evanResDetail.data;\n      const values: Array<number> = [];\n      const fixTime = intl.locale.includes(\"zh\") ? 60 * 60 * 16 : 0;\n      let baseValue = 0;\n      if (label.length === 0) {\n        for (let i = 0; i < detailData.timestamp.length; i++) {\n          const time = new Date(1970, 0, 1);\n          time.setSeconds(detailData.timestamp[i] + fixTime);\n          label[i] = time.toISOString().slice(11, 16);\n          setCountLabel(label);\n        }\n      }\n      for (let i = 0; i < label.length; i++) {\n        const value = detailData.indicators.quote[0].close[i];\n        if (i === 0) {\n          baseValue = value;\n          values[i] = 0;\n        } else {\n          values[i] = value / baseValue - 1;\n        }\n      }\n      setCountData((prev) => {\n        return [...prev, { name: name, values: values }];\n      });\n    }\n  }\n\n  async function LoadButtomClick() {\n    setData([]);\n    setLoading(true);\n    await fetchData();\n    setLoading(false);\n  }\n\n  var summitButton;\n  if (loading) {\n    summitButton = (\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary w-100 h-100 px-2 disabled\"\n      >\n        <span\n          className=\"spinner-border spinner-border-sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        ></span>\n      </button>\n    );\n  } else {\n    summitButton = (\n      <button\n        type=\"submit\"\n        className=\"btn btn-primary w-100 h-100\"\n        onClick={LoadButtomClick}\n      >\n        <FormattedMessage id=\"crawlCrypto.summit\" />\n      </button>\n    );\n  }\n\n  return (\n    <div>\n      <main className={style.main}>\n        <h3>\n          <FormattedMessage id=\"crawlCrypto.title\" />\n        </h3>\n        <div className={style.body}>\n          <div className={style.background}></div>\n          <motion.div\n              initial=\"offscreen\"\n              whileInView=\"onscreen\"\n              transition={{ delay:0.5, duration: 0.5 }}\n              variants={variants}\n            >\n            <div className=\"p-2\">{summitButton}</div>\n            <ul className=\"txt-tip1\">\n              <li>\n                <FormattedMessage id=\"crawlCrypto.description\" />\n              </li>\n            </ul>\n            <div>\n              <div\n                className={style.list_container + \" bg-secondary w-100\"}\n                ref={listContainer}\n              >\n                <CryptoList listData={data} />\n              </div>\n              <div className={style.chart_container}>\n                <Line ref={chartRef} options={options} data={chartData} />\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":["FetchEvanAPI_CrawlReddit_Get","_x3","_x4","_FetchEvanAPI_CrawlReddit_Get","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","subreddit","lastThing","response","json","wrap","_context2","prev","next","fetch","Api_Flask_Reddit","method","sent","abrupt","t0","code","message","data","stop","FetchEvanAPI_ScrabbleHelper_Get","_x5","_x6","_FetchEvanAPI_ScrabbleHelper_Get","_callee3","word","translate","_context3","Api_Flask_ScrabbleHelper","FetchEvanAPI_CrawlCrypto_Get","_FetchEvanAPI_CrawlCrypto_Get","_callee4","_context4","Api_Flask_Crypto","FetchEvanAPI_CrawlCryptoDetail_Get","_x7","_FetchEvanAPI_CrawlCryptoDetail_Get","_callee5","crypto","_context5","Api_Flask_CryptoDetail","indicators","quote","timestamp","FetchEvanAPI_CrawlCNN_Get","_x8","_x9","_x10","_FetchEvanAPI_CrawlCNN_Get","_callee6","size","skip","_context6","Api_Flask_CNN","CryptoItem","_ref","name","price","change","changeRate","changeCss","startsWith","style","changeRateCss","_jsxs","children","_jsx","className","CryptoList","listData","cellPadding","border","map","item","v4","CrawlYahooCrypto","chartRef","useRef","listContainer","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","setData","_useState5","_useState6","countLabel","setCountLabel","_useState7","_useState8","countData","setCountData","_useState9","datasets","_useState10","chartData","setChartData","intl","useIntl","useEffect","current","scrollTop","scrollHeight","Array","length","push","label","values","backgroundColor","borderColor","borderWidth","pointBorderWidth","pointRadius","fill","labels","summitButton","options","layout","padding","plugins","legend","position","display","align","color","usePointStyle","title","text","formatMessage","id","responsive","maintainAspectRatio","aspectRatio","scales","x","beginAtZero","grid","drawBorder","ticks","precision","y","fetchData","_fetchData","_callee","evanRes","chartSkip","count","_loop","i","evanResDetail","detailData","fixTime","baseValue","_i","time","_i2","value","_context","indexOf","locale","includes","Date","setSeconds","toISOString","slice","close","concat","_toConsumableArray","delegateYield","_LoadButtomClick","type","role","onClick","FormattedMessage","motion","initial","whileInView","transition","delay","duration","variants","offscreen","opacity","onscreen","ref","Line","ChartJS","BarController","BarElement","LineController","LineElement","PointElement","LinearScale","Title","CategoryScale","Legend"],"sourceRoot":""}