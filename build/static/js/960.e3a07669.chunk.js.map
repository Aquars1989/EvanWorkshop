{"version":3,"file":"static/js/960.e3a07669.chunk.js","mappings":"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","sources":["fetch/fetch-evan-flask-api.tsx","webpack://evan-workshop/./src/pages/Programs/pages/CrawlReddit/index.module.css?ba58","pages/Programs/pages/CrawlReddit/components/reddit-item.tsx","pages/Programs/pages/CrawlReddit/components/reddit-list.tsx","pages/Programs/pages/CrawlReddit/components/word-cloud.tsx","pages/Programs/pages/CrawlReddit/index.tsx"],"sourcesContent":["import {\n  Api_Flask_Leetcode,\n  Api_Flask_Reddit,\n  Api_Flask_ScrabbleHelper,\n  Api_Flask_Crypto,\n  Api_Flask_CryptoDetail,\n  Api_Flask_CNN,\n  Api_Flask_OpenArt\n} from \"golbal/constants\";\n\ninterface IEvanAPIReceive<T>\n{\n  code: string; \n  message: string;\n  data: T;\n}\n\nexport interface ICrawlLeetcodeData\n{\n  record:\n  {\n    acRate:number;\n    difficulty: string;\n    frontendQuestionId: string;\n    tags:Array<string>;\n    title: string;\n}[],\n  tag: {\n    acceptance: number;\n    count: number;\n    difficulty: string;\n    tag: string;\n  }[]\n}\n\nexport interface ICrawlRedditData\n{\n  author:string;\n  thing: string;\n  time:string;\n  title: string;\n  url:string;\n}\n\nexport interface IScrabbleHelperData\n{\n  mean:Array<string>;\n  word: string;\n  translated:string;\n}\n\nexport interface ICrawlCryptoData\n{\n  name: string;\n  price: string;\n  change: string;\n  changeRate: string;\n}\n\nexport interface ICrawlCryptoDetailData\n{\n  indicators:\n  {\n    quote:\n    {\n      close: Array<number>;\n      high: Array<number>;\n      low: Array<number>;\n      open: Array<number>;\n      volume: Array<number>;\n    }[]\n  },\n  timestamp: Array<number>;\n}\n\nexport interface ICrawlCNNData\n{\n  category: string;\n  firstPublish: string;\n  lastPublish: string;\n  headline: string;\n  url: string;\n}\n\nexport async function FetchEvanAPI_CrawlLeetcode_Get (limit:number, skip:number) :Promise<IEvanAPIReceive<ICrawlLeetcodeData>>{\n  try {\n    //console.log(Api_Flask_Leetcode + \"?skip=\" + skip + \"&limit=\" + limit);\n    const response = await fetch(\n      Api_Flask_Leetcode + \"?skip=\" + skip + \"&limit=\" + limit,\n      {\n        method: \"GET\",\n      }\n    );\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : {record:[] ,tag:[]}\n    };\n  }\n}\n\nexport async function FetchEvanAPI_CrawlReddit_Get(subreddit:string, lastThing:string) :Promise<IEvanAPIReceive<Array<ICrawlRedditData>>> {\n  try {\n    const response = await fetch(\n      Api_Flask_Reddit + \"?subreddit=\" + subreddit + \"&lastThing=\" + lastThing,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : []\n    };\n  }\n}\n\nexport async function FetchEvanAPI_ScrabbleHelper_Get(word:string, translate:string) :Promise<IEvanAPIReceive<Array<IScrabbleHelperData>>> {\n  try {\n   \n    const response = await fetch(\n      Api_Flask_ScrabbleHelper + \"?word=\" + word + \"&translate=\" + translate,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : []\n    };\n  }\n}\n\nexport async function FetchEvanAPI_CrawlCrypto_Get() :Promise<IEvanAPIReceive<Array<ICrawlCryptoData>>> {\n  try {\n   \n    const response = await fetch(\n      Api_Flask_Crypto ,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : []\n    };\n  }\n}\n\nexport async function FetchEvanAPI_CrawlCryptoDetail_Get(crypto:string) :Promise<IEvanAPIReceive<ICrawlCryptoDetailData>> {\n  try {\n   \n    const response = await fetch(\n      Api_Flask_CryptoDetail + \"?crypto=\" + crypto ,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : {indicators:{quote:[]} ,timestamp:[]}\n    };\n  }\n}\n\nexport async function FetchEvanAPI_CrawlCNN_Get(word:string, size:number, skip:number) :Promise<IEvanAPIReceive<Array<ICrawlCNNData>>> {\n  try {\n    const response = await fetch(\n      Api_Flask_CNN + \"?word=\" + word + \"&size=\" + size+\"&skip=\"+skip,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : []\n    };\n  }\n}\n\nexport async function FetchEvanAPI_OpenArt_Get(word:string) :Promise<IEvanAPIReceive<string>> {\n  try {\n   \n    const text = word || \"\";\n    if (text.trim().length === 0) {\n      return { code: \"O002\", message: \"Please enter the word\", data:\"\" };\n    }\n\n    const response = await fetch(\n      Api_Flask_OpenArt + \"?word=\" + word,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const json = await response.json();\n    return json;\n  } catch (ex:any) {\n    return {\n      code: \"A990\",\n      message: ex.message,\n      data : \"\"\n    };\n  }\n}","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"CrawlReddit_main__CbDxS\",\"body\":\"CrawlReddit_body__72WMz\",\"background\":\"CrawlReddit_background__JgcnF\",\"item\":\"CrawlReddit_item__JGF7E\",\"item_title\":\"CrawlReddit_item_title__zkc9O\",\"item_author\":\"CrawlReddit_item_author__pPsj7\",\"item_time\":\"CrawlReddit_item_time__tkCoJ\",\"list_container\":\"CrawlReddit_list_container__7s5aU\",\"link_clear_filter\":\"CrawlReddit_link_clear_filter__W3aD4\"};","import style from \"../index.module.css\";\n\ninterface Props \n{\n  url:string,\n  title:string, \n  author:string, \n  time:string \n}\n\nexport default function RedditItem({ url, title, author, time }:Props) {\n  return (\n    <div className={style.item}>\n      <div>\n        <a className={style.item_title} href={url}>\n          {title}\n        </a>\n      </div>\n      <span className={style.item_author}>{author}</span>\n      <span className={style.item_time}>{time}</span>\n    </div>\n  );\n}\n","import RedditItem from \"./reddit-item\";\nimport { v4 } from \"uuid\";\nimport { ICrawlRedditData } from \"fetch/fetch-evan-flask-api\";\n\ninterface Props{\n  listData:Array<ICrawlRedditData>\n}\n\nexport default function RedditList({ listData }:Props) {\n  return (\n    <div >\n      {listData.map((item) => {\n        const { url, title, author, time } = item;\n        return (\n          <RedditItem\n            key={v4()}\n            url={url}\n            title={title}\n            author={author}\n            time={time}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import { lancasterStemmer as LancasterStemmer } from \"lancaster-stemmer\";\nimport { ICrawlRedditData } from \"fetch/fetch-evan-flask-api\";\n\nconst defaultMaxWords = 100;\nconst defaultStopwords = [\"a\",\"a's\",\"able\",\"about\",\"above\",\"according\",\"accordingly\",\"across\",\"actually\",\"after\",\"afterwards\",\"again\",\"against\",\"ain't\",\"all\",\"allow\",\"allows\",\"almost\",\"alone\",\"along\",\"already\",\"also\",\"although\",\"always\",\"am\",\"among\",\"amongst\",\"an\",\"and\",\"another\",\"any\",\"anybody\",\"anyhow\",\"anyone\",\"anything\",\"anyway\",\"anyways\",\"anywhere\",\"apart\",\"appear\",\"appreciate\",\"appropriate\",\"are\",\"aren't\",\"around\",\"as\",\"aside\",\"ask\",\"asking\",\"associated\",\"at\",\"available\",\"away\",\"awfully\",\"b\",\"be\",\"became\",\"because\",\"become\",\"becomes\",\"becoming\",\"been\",\"before\",\"beforehand\",\"behind\",\"being\",\"believe\",\"below\",\"beside\",\"besides\",\"best\",\"better\",\"between\",\"beyond\",\"both\",\"brief\",\"but\",\"by\",\"c\",\"c'mon\",\"c's\",\"came\",\"can\",\"can't\",\"cannot\",\"cant\",\"cause\",\"causes\",\"certain\",\"certainly\",\"changes\",\"clearly\",\"co\",\"com\",\"come\",\"comes\",\"concerning\",\"consequently\",\"consider\",\"considering\",\"contain\",\"containing\",\"contains\",\"corresponding\",\"could\",\"couldn't\",\"course\",\"currently\",\"d\",\"definitely\",\"described\",\"despite\",\"did\",\"didn't\",\"different\",\"do\",\"does\",\"doesn't\",\"doing\",\"don't\",\"done\",\"down\",\"downwards\",\"during\",\"e\",\"each\",\"edu\",\"eg\",\"eight\",\"either\",\"else\",\"elsewhere\",\"enough\",\"entirely\",\"especially\",\"et\",\"etc\",\"even\",\"ever\",\"every\",\"everybody\",\"everyone\",\"everything\",\"everywhere\",\"ex\",\"exactly\",\"example\",\"except\",\"f\",\"far\",\"few\",\"fifth\",\"first\",\"five\",\"followed\",\"following\",\"follows\",\"for\",\"former\",\"formerly\",\"forth\",\"four\",\"from\",\"further\",\"furthermore\",\"g\",\"get\",\"gets\",\"getting\",\"given\",\"gives\",\"go\",\"goes\",\"going\",\"gone\",\"got\",\"gotten\",\"greetings\",\"h\",\"had\",\"hadn't\",\"happens\",\"hardly\",\"has\",\"hasn't\",\"have\",\"haven't\",\"having\",\"he\",\"he's\",\"hello\",\"help\",\"hence\",\"her\",\"here\",\"here's\",\"hereafter\",\"hereby\",\"herein\",\"hereupon\",\"hers\",\"herself\",\"hi\",\"him\",\"himself\",\"his\",\"hither\",\"hopefully\",\"how\",\"howbeit\",\"however\",\"i\",\"i'd\",\"i'll\",\"i'm\",\"i've\",\"ie\",\"if\",\"ignored\",\"immediate\",\"in\",\"inasmuch\",\"inc\",\"indeed\",\"indicate\",\"indicated\",\"indicates\",\"inner\",\"insofar\",\"instead\",\"into\",\"inward\",\"is\",\"isn't\",\"it\",\"it'd\",\"it'll\",\"it's\",\"its\",\"itself\",\"j\",\"just\",\"k\",\"keep\",\"keeps\",\"kept\",\"know\",\"known\",\"knows\",\"l\",\"last\",\"lately\",\"later\",\"latter\",\"latterly\",\"least\",\"less\",\"lest\",\"let\",\"let's\",\"like\",\"liked\",\"likely\",\"little\",\"look\",\"looking\",\"looks\",\"ltd\",\"m\",\"mainly\",\"many\",\"may\",\"maybe\",\"me\",\"mean\",\"meanwhile\",\"merely\",\"might\",\"more\",\"moreover\",\"most\",\"mostly\",\"much\",\"must\",\"my\",\"myself\",\"n\",\"name\",\"namely\",\"nd\",\"near\",\"nearly\",\"necessary\",\"need\",\"needs\",\"neither\",\"never\",\"nevertheless\",\"new\",\"next\",\"nine\",\"no\",\"nobody\",\"non\",\"none\",\"noone\",\"nor\",\"normally\",\"not\",\"nothing\",\"novel\",\"now\",\"nowhere\",\"o\",\"obviously\",\"of\",\"off\",\"often\",\"oh\",\"ok\",\"okay\",\"old\",\"on\",\"once\",\"one\",\"ones\",\"only\",\"onto\",\"or\",\"other\",\"others\",\"otherwise\",\"ought\",\"our\",\"ours\",\"ourselves\",\"out\",\"outside\",\"over\",\"overall\",\"own\",\"p\",\"particular\",\"particularly\",\"per\",\"perhaps\",\"placed\",\"please\",\"plus\",\"possible\",\"presumably\",\"probably\",\"provides\",\"q\",\"que\",\"quite\",\"qv\",\"r\",\"rather\",\"rd\",\"re\",\"really\",\"reasonably\",\"regarding\",\"regardless\",\"regards\",\"relatively\",\"respectively\",\"right\",\"s\",\"said\",\"same\",\"saw\",\"say\",\"saying\",\"says\",\"second\",\"secondly\",\"see\",\"seeing\",\"seem\",\"seemed\",\"seeming\",\"seems\",\"seen\",\"self\",\"selves\",\"sensible\",\"sent\",\"serious\",\"seriously\",\"seven\",\"several\",\"shall\",\"she\",\"should\",\"shouldn't\",\"since\",\"six\",\"so\",\"some\",\"somebody\",\"somehow\",\"someone\",\"something\",\"sometime\",\"sometimes\",\"somewhat\",\"somewhere\",\"soon\",\"sorry\",\"specified\",\"specify\",\"specifying\",\"still\",\"sub\",\"such\",\"sup\",\"sure\",\"t\",\"t's\",\"take\",\"taken\",\"tell\",\"tends\",\"th\",\"than\",\"thank\",\"thanks\",\"thanx\",\"that\",\"that's\",\"thats\",\"the\",\"their\",\"theirs\",\"them\",\"themselves\",\"then\",\"thence\",\"there\",\"there's\",\"thereafter\",\"thereby\",\"therefore\",\"therein\",\"theres\",\"thereupon\",\"these\",\"they\",\"they'd\",\"they'll\",\"they're\",\"they've\",\"think\",\"third\",\"this\",\"thorough\",\"thoroughly\",\"those\",\"though\",\"three\",\"through\",\"throughout\",\"thru\",\"thus\",\"to\",\"together\",\"too\",\"took\",\"toward\",\"towards\",\"tried\",\"tries\",\"truly\",\"try\",\"trying\",\"twice\",\"two\",\"u\",\"un\",\"under\",\"unfortunately\",\"unless\",\"unlikely\",\"until\",\"unto\",\"up\",\"upon\",\"us\",\"use\",\"used\",\"useful\",\"uses\",\"using\",\"usually\",\"uucp\",\"v\",\"value\",\"various\",\"very\",\"via\",\"viz\",\"vs\",\"w\",\"want\",\"wants\",\"was\",\"wasn't\",\"way\",\"we\",\"we'd\",\"we'll\",\"we're\",\"we've\",\"welcome\",\"well\",\"went\",\"were\",\"weren't\",\"what\",\"what's\",\"whatever\",\"when\",\"whence\",\"whenever\",\"where\",\"where's\",\"whereafter\",\"whereas\",\"whereby\",\"wherein\",\"whereupon\",\"wherever\",\"whether\",\"which\",\"while\",\"whither\",\"who\",\"who's\",\"whoever\",\"whole\",\"whom\",\"whose\",\"why\",\"will\",\"willing\",\"wish\",\"with\",\"within\",\"without\",\"won't\",\"wonder\",\"would\",\"wouldn't\",\"x\",\"y\",\"yes\",\"yet\",\"you\",\"you'd\",\"you'll\",\"you're\",\"you've\",\"your\",\"yours\",\"yourself\",\"yourselves\",\"z\",\"zero\"]; // prettier-ignore\n\ninterface ItokenizeWordsSettings {\n  allowNumbers:Boolean;\n  maxWords:number;\n  stopwordsInput:string;\n}\n\nexport function tokenizeWords(content: Array<ICrawlRedditData>, settings: ItokenizeWordsSettings) {\n  const { allowNumbers, maxWords, stopwordsInput } = settings;\n\n  const stopwords = stopwordsInput\n    .split(\",\")\n    .map((stopword: string) => stopword.toLowerCase().trim());\n  const stopwordsSet = new Set(\n    [...defaultStopwords, ...stopwords].map((stopword) =>\n      stopword.toLowerCase()\n    )\n  );\n\n  var matched: Array<any> = [];\n  content.forEach((x) => {\n    matched = matched.concat(x.title.match(/\\w+/g));\n  });\n  if (!matched) {\n    return [];\n  }\n  //console.log(matched);\n  const tokens: Array<string> = matched\n    .map((token) => token.toLowerCase())\n    .filter((token) => {\n      const filterByStopwords = !stopwordsSet.has(token);\n      return allowNumbers\n        ? filterByStopwords\n        : filterByStopwords && Number.isNaN(Number(token));\n    })\n    .map((token) => {\n      return LancasterStemmer(token);\n    });\n\n  const frequency = new Map<string, number>();\n  tokens.forEach((token) => {\n    const value = frequency.get(token) || 0;\n    frequency.set(token, value + 1);\n  });\n\n  return Array.from(frequency, ([text, value]) => ({ text, value }))\n    .sort((a, b) => b.value - a.value)\n    .slice(0, maxWords || defaultMaxWords);\n}\n","import { useState, useEffect, useRef, useMemo } from \"react\";\nimport style from \"./index.module.css\";\nimport RedditList from \"./components/reddit-list\";\nimport ReactWordcloud, {\n  Optional,\n  Options,\n  Word,\n  Callbacks,\n} from \"react-wordcloud\";\nimport { tokenizeWords } from \"./components/word-cloud\";\nimport { FormattedMessage } from \"react-intl\";\nimport {\n  FetchEvanAPI_CrawlReddit_Get,\n  ICrawlRedditData,\n} from \"fetch/fetch-evan-flask-api\";\nimport { Props } from \"tippy.js\";\nimport \"tippy.js/themes/light.css\";\nimport { motion } from \"framer-motion\";\n\nexport default function CrawlReddit() {\n  const listContainer = useRef<HTMLDivElement>(null);\n  const [userInput, setUserInput] = useState(\"technology\");\n  const [data, setData] = useState([] as Array<ICrawlRedditData>);\n  const [filter, setFilter] = useState(\"\");\n  const [filterData, setFilterData] = useState([] as Array<ICrawlRedditData>);\n  const [words, setWords] = useState([] as Array<Word>);\n  const [loading, setLoading] = useState(false);\n\n  const wordcloudCallbacks: Optional<Callbacks> = useMemo(\n    () => ({\n      onWordClick: (word) => {\n        console.log(loading);\n        if (loading) {\n          setFilter(\"\");\n        } else {\n          setFilter(word.text);\n        }\n      },\n    }),\n    [loading]\n  );\n\n  const clearFilter = () => {\n    setFilter(\"\");\n  };\n\n  useEffect(() => {\n    //console.log(filter);\n    if (data.length === 0) {\n      setFilterData(data);\n    } else {\n      if (filter === \"\") {\n        setFilterData(data);\n      } else {\n        var filterData = data.filter((x: any) => {\n          return x.title.toLowerCase().includes(filter);\n        });\n        setFilterData(filterData);\n      }\n    }\n  }, [data, filter]);\n\n  useEffect(() => {\n    if (listContainer.current) {\n      listContainer.current.scrollTop = listContainer.current.scrollHeight;\n    }\n  }, [filterData]);\n\n  const variants = {\n    offscreen: { opacity: 0 },\n    onscreen: { opacity: 1 },\n  };\n\n  async function fetchData(subreddit: string, setData: any) {\n    var page = 0;\n    var lastThing = \"\";\n    while (page < 5) {\n      const evanRes = await FetchEvanAPI_CrawlReddit_Get(subreddit, lastThing);\n      if (evanRes.code !== \"0000\") break;\n      if (evanRes === undefined || evanRes.data.length === 0) {\n        setData((prev: Array<ICrawlRedditData>) => {\n          return prev.concat([]);\n        });\n        break;\n      }\n      setData((prev: Array<ICrawlRedditData>) => {\n        return prev.concat(evanRes.data);\n      });\n      lastThing = evanRes.data[evanRes.data.length - 1].thing;\n      page++;\n    }\n  }\n\n  async function onSubmit(event: any) {\n    event.preventDefault();\n    setData([]);\n    setFilter(\"\");\n    setLoading(true);\n    await fetchData(userInput, setData);\n    setLoading(false);\n    //console.log(data);\n    //genWords(setWords);\n  }\n\n  useEffect(() => {\n    //console.log(loading, data);\n    if (!loading) {\n      const wordsToken = tokenizeWords(data, {\n        allowNumbers: false,\n        maxWords: 100,\n        stopwordsInput: \"\",\n      });\n\n      //console.log(wordsToken);\n\n      if (wordsToken === undefined || wordsToken.length === 0) {\n        setWords([\n          { text: \"empty\", value: 1 },\n          { text: \"data\", value: 1 },\n        ]);\n      } else {\n        //console.log(wordsToken);\n        setWords(wordsToken);\n      }\n    } else {\n      setWords([\n        { text: \"Waiting\", value: 1 },\n        { text: \"a\", value: 1 },\n        { text: \"second\", value: 1 },\n      ]);\n    }\n  }, [loading, data]);\n\n  const tooltip: Optional<Props> = {\n    theme: \"wordCloud\",\n  };\n\n  const options: Optional<Options> = {\n    colors: [\n      \"#c1c8ff\",\n      \"#fdd7b6\",\n      \"#e2ffa4\",\n      \"#ff97c8\",\n      \"#ca9af8\",\n      \"#b5ffe2\",\n      \"#ffc0ec\",\n      \"#eeeeee\",\n      \"#fcfdb8\",\n      \"#b0f2ff\",\n    ],\n\n    fontFamily: \"Merriweather\",\n    fontSizes: [10, 60],\n    padding: 1,\n    rotations: 2,\n    rotationAngles: [-90, 0],\n    spiral: \"archimedean\",\n    scale: \"linear\",\n    transitionDuration: 500,\n    // Non-configurable\n    deterministic: true,\n    enableOptimizations: true,\n    enableTooltip: true,\n    tooltipOptions: tooltip,\n  };\n\n  const filterLabel =\n    data.length === 0 ? (\n      <></>\n    ) : filter === \"\" ? (\n      <small className=\"txt-tip1\">\n        <FormattedMessage id=\"crawlReddit.tipSetFilter\" />\n      </small>\n    ) : (\n      <small className=\"txt-tip1\">\n        <FormattedMessage\n          id=\"crawlReddit.tipFilter\"\n          values={{ filter: filter }}\n        />\n        <button\n          onClick={clearFilter}\n          className={style.link_clear_filter + \" mx-2\"}\n        >\n          <FormattedMessage id=\"crawlReddit.tipClearFilter\" />\n        </button>\n      </small>\n    );\n\n  var summitButton;\n  if (loading) {\n    summitButton = (\n      <button type=\"submit\" className=\"btn btn-primary w-100 h-100 disabled\">\n        <span\n          className=\"spinner-border spinner-border-sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        ></span>\n      </button>\n    );\n  } else {\n    summitButton = (\n      <button type=\"submit\" className=\"btn btn-primary w-100 h-100\">\n        <FormattedMessage id=\"crawlReddit.summit\" />\n      </button>\n    );\n  }\n\n  return (\n    <div>\n      <main className={style.main}>\n        <h3>\n          <FormattedMessage id=\"crawlReddit.title\" />\n        </h3>\n        <div className={style.body}>\n          <div className={style.background}></div>\n          <motion.div\n              initial=\"offscreen\"\n              whileInView=\"onscreen\"\n              transition={{ delay:0.5, duration: 0.5 }}\n              variants={variants}\n            >\n            <form onSubmit={onSubmit} className=\"row align-items-sm-stretch\">\n              <div className=\"col-sm-10 col-md-9 p-2\">\n                <div className=\"input-group input-group-sm h-100\">\n                  <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">\n                    <FormattedMessage id=\"crawlReddit.subreddit\" />\n                  </span>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    aria-label=\"Sizing example input\"\n                    aria-describedby=\"inputGroup-sizing-sm\"\n                    value={userInput}\n                    onChange={(e) => setUserInput(e.target.value)}\n                  />\n                </div>\n              </div>\n              <div className=\"col-sm-10 col-md-3 p-2\">{summitButton}</div>\n            </form>\n            <ul className=\"txt-tip1\">\n              <li>\n                <FormattedMessage id=\"crawlReddit.description\" />\n              </li>\n            </ul>\n            <div>\n              <div\n                className={style.list_container + \" bg-secondary w-100 h-50\"}\n                ref={listContainer}\n              >\n                <RedditList listData={filterData} />\n              </div>\n              <div className=\"h-50\">\n                {filterLabel}\n                <div>\n                  <ReactWordcloud\n                    words={words}\n                    options={options}\n                    callbacks={wordcloudCallbacks}\n                  />\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":["FetchEvanAPI_CrawlReddit_Get","_x3","_x4","_FetchEvanAPI_CrawlReddit_Get","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","subreddit","lastThing","response","json","wrap","_context2","prev","next","fetch","Api_Flask_Reddit","method","sent","abrupt","t0","code","message","data","stop","FetchEvanAPI_ScrabbleHelper_Get","_x5","_x6","_FetchEvanAPI_ScrabbleHelper_Get","_callee3","word","translate","_context3","Api_Flask_ScrabbleHelper","FetchEvanAPI_CrawlCrypto_Get","_FetchEvanAPI_CrawlCrypto_Get","_callee4","_context4","Api_Flask_Crypto","FetchEvanAPI_CrawlCryptoDetail_Get","_x7","_FetchEvanAPI_CrawlCryptoDetail_Get","_callee5","crypto","_context5","Api_Flask_CryptoDetail","indicators","quote","timestamp","FetchEvanAPI_CrawlCNN_Get","_x8","_x9","_x10","_FetchEvanAPI_CrawlCNN_Get","_callee6","size","skip","_context6","Api_Flask_CNN","RedditItem","_ref","url","title","author","time","_jsxs","className","style","children","_jsx","href","RedditList","listData","map","item","v4","defaultMaxWords","defaultStopwords","CrawlReddit","listContainer","useRef","_useState","useState","_useState2","_slicedToArray","userInput","setUserInput","_useState3","_useState4","setData","_useState5","_useState6","filter","setFilter","_useState7","_useState8","filterData","setFilterData","_useState9","_useState10","words","setWords","_useState11","_useState12","loading","setLoading","wordcloudCallbacks","useMemo","onWordClick","console","log","text","useEffect","length","x","toLowerCase","includes","current","scrollTop","scrollHeight","fetchData","_x","_x2","_fetchData","_callee","page","_loop","evanRes","_context","undefined","concat","thing","delegateYield","_onSubmit","event","preventDefault","value","wordsToken","content","settings","allowNumbers","maxWords","stopwords","stopwordsInput","split","stopword","trim","stopwordsSet","Set","_toConsumableArray","matched","forEach","match","tokens","token","filterByStopwords","has","Number","isNaN","LancasterStemmer","frequency","Map","get","set","Array","from","_ref2","sort","a","b","slice","tokenizeWords","summitButton","options","colors","fontFamily","fontSizes","padding","rotations","rotationAngles","spiral","scale","transitionDuration","deterministic","enableOptimizations","enableTooltip","tooltipOptions","theme","filterLabel","_Fragment","FormattedMessage","id","values","onClick","type","role","motion","initial","whileInView","transition","delay","duration","variants","offscreen","opacity","onscreen","onSubmit","onChange","e","target","ref","ReactWordcloud","callbacks"],"sourceRoot":""}